
use register_accessory.ump;
use register_accessorytype.ump;
use register_advancement.ump;
use register_attribute.ump;
use register_block.ump;
use register_blockentity.ump;
use register_brewing.ump;
use register_container.ump;
use register_effect.ump;
use register_entitytype.ump;
use register_init.ump;
use register_item.ump;
use register_itemgroup.ump;
use register_recipe.ump;
use register_skill.ump;
use register_sound.ump;
use register_storage.ump;
use register_tag.ump;

class DoggyRegistries {
depend net.minecraftforge.registries.RegistryBuilder;

	public static void newRegistry(NewRegistryEvent event) {
		DoggyTalentsAPI.TALENTS = event.create(makeRegistry(Keys.TALENTS_REGISTRY, Talent.class));
		DoggyTalentsAPI.ACCESSORIES = event.create(makeRegistry(Keys.ACCESSORIES_REGISTRY, Accessory.class));
		DoggyTalentsAPI.ACCESSORY_TYPE = event
				.create(makeRegistry(Keys.ACCESSORY_TYPE_REGISTRY, AccessoryType.class).disableSync());
	}

	private static <T> RegistryBuilder<T> makeRegistry(final ResourceLocation rl, Class<T> type) {
		return new RegistryBuilder<T>().setName(rl);
	}

	static class Keys {
		public static final ResourceLocation TALENTS_REGISTRY = Util.getResource("talents");
		public static final ResourceLocation ACCESSORIES_REGISTRY = Util.getResource("accessories");
		public static final ResourceLocation ACCESSORY_TYPE_REGISTRY = Util.getResource("accessory_type");
		public static final ResourceLocation BEDDING_REGISTRY = Util.getResource("bedding");
		public static final ResourceLocation CASING_REGISTRY = Util.getResource("casing");
	}

}

namespace-;
