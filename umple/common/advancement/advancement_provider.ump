
class DTAdvancementProvider {

depend java.util.List;
depend java.util.function.Consumer;
depend net.minecraft.core.HolderLookup.Provider;
depend net.minecraft.world.item.Items;

isA ForgeAdvancementProvider;

	public DTAdvancementProvider(PackOutput output, CompletableFuture<HolderLookup.Provider> registries,
			ExistingFileHelper existingFileHelper) {
		/* custom constructor */
		super(output, registries, existingFileHelper, List.of(new DoggyAdvancementsSubProvider()));
	}

	public static class DoggyAdvancementsSubProvider implements ForgeAdvancementProvider.AdvancementGenerator {
		@Override
		public void generate(Provider registries, Consumer<Advancement> consumer,
				ExistingFileHelper existingFileHelper) {
			Advancement charm_advancement = Advancement.Builder.advancement()
					.display(DisplayInfoBuilder.create().icon(DoggyItems.DOGGY_CHARM).frame(FrameType.TASK)
							.translate("doggy_charm_summon").background("adventure.png").build())
					.addCriterion("summon_dog",
							ItemUsedOnLocationTrigger.TriggerInstance.itemUsedOnBlock(
									LocationPredicate.Builder.location(),
									ItemPredicate.Builder.item().of(DoggyItems.DOGGY_CHARM.get())))
					.save(consumer, Util.getResourcePath("dtn_core/summon_dog"));

			Advancement train_dog_advancement = Advancement.Builder.advancement().parent(charm_advancement)
					.display(DisplayInfoBuilder.create().icon(DoggyItems.TRAINING_TREAT).frame(FrameType.TASK)
							.translate("train_dog_hajimemashite").build())
					.addCriterion("train_dog",
							PlayerInteractTrigger.TriggerInstance.itemUsedOnEntity(
									ItemPredicate.Builder.item().of(DoggyItems.TRAINING_TREAT.get()),
									EntityPredicate.wrap(EntityPredicate.Builder.entity().of(EntityType.WOLF).build())))
					.save(consumer, Util.getResourcePath("dtn_core/train_dog"));

			Advancement sake_advancement = Advancement.Builder.advancement()
					.display(DisplayInfoBuilder.create().icon(DoggyItems.SAKE).frame(FrameType.TASK)
							.translate("get_dog_drunk").build())
					.addCriterion("get_dog_drunk", DogDrunkTrigger.getInstance())
					.save(consumer, Util.getResourcePath("default/get_dog_drunk"));

			Advancement ookamikaze_advancement = Advancement.Builder.advancement()
					.display(DisplayInfoBuilder.create().icon(() -> Items.GUNPOWDER).frame(FrameType.TASK)
							.translate("ookamikaze_trigger").build())
					.addCriterion("ookamikaze_trigger", OokamikazeTrigger.getInstance())
					.save(consumer, Util.getResourcePath("default/ookamikaze_trigger"));
		}
	}

}
